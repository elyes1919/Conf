version: "3"
services:
  sonarqube:
    image: sonarqube:community
    #hostname: sonarqube
    #container_name: sonarqube
    #depends_on:
    #  - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    deploy:
      replicas: 1
      placement:
       constraints:
         - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.sonar.rule=Host(`sonar.pfeelyes.space`)"
        - "traefik.http.services.sonar.loadbalancer.server.port=9000"
        - "traefik.http.routers.sonar.entrypoints=websecure"
        - "traefik.http.routers.sonar.tls=true"
        - "traefik.http.routers.sonar.tls.certresolver=myresolver"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/log
      - /opt/sonarqube/conf/sonar.properties:/opt/sonarqube/conf/sonar.properties
    #ports:
    #  - "9000:9000"
    networks:
      - proxy
  db:
    image: postgres:13
    #hostname: postgresql
    #container_name: postgresql
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - proxy
volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:

networks:
  proxy:
    external: true